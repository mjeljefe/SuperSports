{"ast":null,"code":"import API from '../../API';\nimport { fetchPostsAction, addPostAction, deletePostAction } from './actions';\nconst api = new API();\nexport const fetchPosts = params => {\n  return dispatch => {\n    return api.getPosts(params).then(posts => {\n      dispatch(fetchPostsAction(posts));\n    }).catch(error => {\n      alert('Failed to connect API: /posts/');\n    });\n  };\n};\nexport const deletePost = id => {\n  return dispatch => {\n    return api.deletePost(id).then(() => {\n      dispatch(deletePostAction(id));\n    }).catch(error => {\n      alert('Failed to connect API to delete a post');\n      console.log(error);\n    });\n  };\n};\nexport const addPost = postBody => {\n  const {\n    name,\n    body\n  } = postBody;\n  return dispatch => {\n    // Validation\n    if (name === '' || body === '') {\n      alert('Please fill out name and body.');\n      return false;\n    }\n\n    return api.addPost(postBody).then(post => {\n      dispatch(addPostAction(post));\n    }).catch(error => {\n      alert('Failed to connect API to add a post');\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/musubimanagement/Desktop/marcus jester/SuperSports/frontend/src/reducks/posts/operations.js"],"names":["API","fetchPostsAction","addPostAction","deletePostAction","api","fetchPosts","params","dispatch","getPosts","then","posts","catch","error","alert","deletePost","id","console","log","addPost","postBody","name","body","post"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,WAAhB;AACA,SAASC,gBAAT,EAA2BC,aAA3B,EAA0CC,gBAA1C,QAAkE,WAAlE;AAEA,MAAMC,GAAG,GAAG,IAAIJ,GAAJ,EAAZ;AAEA,OAAO,MAAMK,UAAU,GAAGC,MAAM,IAAI;AAChC,SAAOC,QAAQ,IAAI;AACf,WAAOH,GAAG,CACLI,QADE,CACOF,MADP,EAEFG,IAFE,CAEGC,KAAK,IAAI;AACXH,MAAAA,QAAQ,CAACN,gBAAgB,CAACS,KAAD,CAAjB,CAAR;AACH,KAJE,EAKFC,KALE,CAKIC,KAAK,IAAI;AACZC,MAAAA,KAAK,CAAC,gCAAD,CAAL;AACH,KAPE,CAAP;AAQH,GATD;AAUH,CAXM;AAaP,OAAO,MAAMC,UAAU,GAAGC,EAAE,IAAI;AAC5B,SAAOR,QAAQ,IAAI;AACf,WAAOH,GAAG,CACLU,UADE,CACSC,EADT,EAEFN,IAFE,CAEG,MAAM;AACRF,MAAAA,QAAQ,CAACJ,gBAAgB,CAACY,EAAD,CAAjB,CAAR;AACH,KAJE,EAKFJ,KALE,CAKIC,KAAK,IAAI;AACZC,MAAAA,KAAK,CAAC,wCAAD,CAAL;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACH,KARE,CAAP;AASH,GAVD;AAWH,CAZM;AAcP,OAAO,MAAMM,OAAO,GAAGC,QAAQ,IAAI;AAC/B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAiBF,QAAvB;AACA,SAAOZ,QAAQ,IAAI;AACf;AACA,QAAIa,IAAI,KAAK,EAAT,IAAeC,IAAI,KAAK,EAA5B,EAAgC;AAC5BR,MAAAA,KAAK,CAAC,gCAAD,CAAL;AACA,aAAO,KAAP;AACH;;AAED,WAAOT,GAAG,CACLc,OADE,CACMC,QADN,EAEFV,IAFE,CAEGa,IAAI,IAAI;AACVf,MAAAA,QAAQ,CAACL,aAAa,CAACoB,IAAD,CAAd,CAAR;AACH,KAJE,EAKFX,KALE,CAKIC,KAAK,IAAI;AACZC,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACH,KARE,CAAP;AASH,GAhBD;AAiBH,CAnBM","sourcesContent":["import API from '../../API';\nimport { fetchPostsAction, addPostAction, deletePostAction } from './actions';\n\nconst api = new API();\n\nexport const fetchPosts = params => {\n    return dispatch => {\n        return api\n            .getPosts(params)\n            .then(posts => {\n                dispatch(fetchPostsAction(posts));\n            })\n            .catch(error => {\n                alert('Failed to connect API: /posts/');\n            });\n    };\n};\n\nexport const deletePost = id => {\n    return dispatch => {\n        return api\n            .deletePost(id)\n            .then(() => {\n                dispatch(deletePostAction(id));\n            })\n            .catch(error => {\n                alert('Failed to connect API to delete a post');\n                console.log(error);\n            });\n    };\n};\n\nexport const addPost = postBody => {\n    const { name, body } = postBody;\n    return dispatch => {\n        // Validation\n        if (name === '' || body === '') {\n            alert('Please fill out name and body.');\n            return false;\n        }\n\n        return api\n            .addPost(postBody)\n            .then(post => {\n                dispatch(addPostAction(post));\n            })\n            .catch(error => {\n                alert('Failed to connect API to add a post');\n                console.log(error);\n            });\n    };\n};\n"]},"metadata":{},"sourceType":"module"}