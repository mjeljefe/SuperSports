{"ast":null,"code":"var _jsxFileName = \"/Users/musubimanagement/Desktop/marcus jester/SuperSports/frontend/src/components/Posts/PostForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addPost } from '../../reducks/posts/operations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostForm = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const initialValues = {\n    name: '',\n    body: ''\n  };\n  const [values, setValues] = useState(initialValues);\n  const [previewImage, setPreviewImage] = useState(null);\n  const [image, setImage] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const inputFile = useRef(null);\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const inputImage = event => {\n    const file = event.target.files[0];\n    const objectUrl = URL.createObjectURL(file);\n    setPreviewImage(objectUrl);\n    setImage(file);\n  };\n\n  const addPostButton = async () => {\n    if (!values.name.trim() || !values.body.trim()) {\n      alert(`Please fill out all required form.`);\n      return;\n    }\n\n    setIsLoading(true);\n    await dispatch(addPost({\n      name: values.name,\n      body: values.body,\n      image\n    }));\n    setIsLoading(false);\n    setValues({\n      name: '',\n      body: ''\n    });\n    setPreviewImage(null);\n    setImage([]);\n    inputFile.current.value = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"post_form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: values.name,\n      placeholder: \"Name\",\n      onChange: handleInputChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"body\",\n      value: values.body,\n      placeholder: \"Tell us anything\",\n      onChange: handleInputChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: inputFile,\n      onChange: inputImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), previewImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-area\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        name: \"image\",\n        type: \"file\",\n        src: previewImage,\n        className: `upload-image ${previewImage ? 'preview-image' : ''}`,\n        alt: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addPostButton,\n      children: isLoading ? 'Posing...' : 'Post'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostForm, \"5LMdfHkGEXfz/QIHb8G2soEZ/po=\", false, function () {\n  return [useDispatch];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/musubimanagement/Desktop/marcus jester/SuperSports/frontend/src/components/Posts/PostForm.jsx"],"names":["React","useRef","useState","useDispatch","addPost","PostForm","dispatch","initialValues","name","body","values","setValues","previewImage","setPreviewImage","image","setImage","isLoading","setIsLoading","inputFile","handleInputChange","e","value","target","inputImage","event","file","files","objectUrl","URL","createObjectURL","addPostButton","trim","alert","current"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { addPost } from '../../reducks/posts/operations';\n\nconst PostForm = () => {\n    const dispatch = useDispatch();\n    const initialValues = { name: '', body: '' };\n    const [values, setValues] = useState(initialValues);\n    const [previewImage, setPreviewImage] = useState(null);\n    const [image, setImage] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const inputFile = useRef(null);\n\n    const handleInputChange = e => {\n        const { name, value } = e.target;\n        setValues({ ...values, [name]: value });\n    };\n\n    const inputImage = event => {\n        const file = event.target.files[0];\n        const objectUrl = URL.createObjectURL(file);\n        setPreviewImage(objectUrl);\n        setImage(file);\n    };\n\n    const addPostButton = async () => {\n        if (!values.name.trim() || !values.body.trim()) {\n            alert(`Please fill out all required form.`);\n            return;\n        }\n        setIsLoading(true);\n\n        await dispatch(addPost({ name: values.name, body: values.body, image }));\n\n        setIsLoading(false);\n        setValues({ name: '', body: '' });\n        setPreviewImage(null);\n        setImage([]);\n        inputFile.current.value = '';\n    };\n\n    return (\n        <section className=\"post_form\">\n            <input\n                type=\"text\"\n                name=\"name\"\n                value={values.name}\n                placeholder=\"Name\"\n                onChange={handleInputChange}\n                required\n            />\n            <textarea\n                name=\"body\"\n                value={values.body}\n                placeholder=\"Tell us anything\"\n                onChange={handleInputChange}\n                required\n            ></textarea>\n            <input type=\"file\" ref={inputFile} onChange={inputImage} />\n            {previewImage && (\n                <div className=\"upload-area\">\n                    <img\n                        name=\"image\"\n                        type=\"file\"\n                        src={previewImage}\n                        className={`upload-image ${previewImage ? 'preview-image' : ''}`}\n                        alt=\"Upload\"\n                    />\n                </div>\n            )}\n            <button type=\"button\" onClick={addPostButton}>\n                {isLoading ? 'Posing...' : 'Post'}\n            </button>\n        </section>\n    );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}