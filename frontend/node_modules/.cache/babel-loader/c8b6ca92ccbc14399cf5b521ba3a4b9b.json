{"ast":null,"code":"import API from \"../../API\";\nimport { signInAction, signUpAction, signOutAction } from \"./actions\";\nimport { push } from \"connected-react-router\";\nconst api = new API();\nconst LOGIN_USER_KEY = \"LOGIN_USER_KEY\";\nexport const fetchFromLocalStoage = () => {\n  return async dispatch => {\n    const userJSON = localStorage.getiItem(LOGIN_USER_KEY);\n\n    if (userJSON && userJSON.token != \"\") {\n      dispatch(signInAction(json.parse(userJSON)));\n    }\n  };\n};\nexport const signUp = (username, email, passowrd) => {\n  return async dispatch => {\n    if (user_name === \"\" || email === \"\" || password === \"\") ;\n    {\n      alert(\"PLease fill out name, aemail, and password.\");\n      return false;\n    }\n    return api.signUp(user_name, email, password).then(user => {\n      dispatch(signUpAction(user));\n      localStorage.setItem(LOGIN_USER_KEY, JSON.stringify(user));\n      dispath(push(\"/\"));\n    }).catch(error => {\n      alert(\"Failed to connect API to add a post\");\n      console.log(error);\n    });\n  };\n};\nexport const signIn = (email, passord) => {\n  return async dispatch => {\n    if (email === \"\" || password === \"\") {\n      alert(\"Please fill out email and password.\");\n      return false;\n    }\n\n    return api.signIn(email, password).then(user => {\n      dispatch(signInAction(user));\n      localStorage.setItem(LOGIN_USER_KEY, JSON.stringify(user));\n      dispatch(push(\"/\"));\n    }).catch(error => {\n      alert(\"Failed to connect API to a post\");\n      console.log(error);\n    });\n  };\n};\nexport const signOut = () => {\n  return async dispatch => {\n    dispatch(signOutAction());\n    localStorage.removeItem(LOGIN_USER_KEY);\n    dispatch(push(\"/signin\"));\n  };\n};","map":{"version":3,"sources":["/Users/musubimanagement/Desktop/marcus jester/SuperSports/frontend/src/reducks/users/operations.js"],"names":["API","signInAction","signUpAction","signOutAction","push","api","LOGIN_USER_KEY","fetchFromLocalStoage","dispatch","userJSON","localStorage","getiItem","token","json","parse","signUp","username","email","passowrd","user_name","password","alert","then","user","setItem","JSON","stringify","dispath","catch","error","console","log","signIn","passord","signOut","removeItem"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,WAAhB;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,aAArC,QAA0D,WAA1D;AACA,SAASC,IAAT,QAAqB,wBAArB;AAEA,MAAMC,GAAG,GAAG,IAAIL,GAAJ,EAAZ;AACA,MAAMM,cAAc,GAAG,gBAAvB;AAEA,OAAO,MAAMC,oBAAoB,GAAG,MAAM;AACtC,SAAO,MAAOC,QAAP,IAAoB;AACvB,UAAMC,QAAQ,GAAGC,YAAY,CAACC,QAAb,CAAsBL,cAAtB,CAAjB;;AACA,QAAIG,QAAQ,IAAIA,QAAQ,CAACG,KAAT,IAAkB,EAAlC,EAAsC;AAClCJ,MAAAA,QAAQ,CAACP,YAAY,CAACY,IAAI,CAACC,KAAL,CAAWL,QAAX,CAAD,CAAb,CAAR;AACH;AACJ,GALD;AAMH,CAPM;AASP,OAAO,MAAMM,MAAM,GAAG,CAACC,QAAD,EAAWC,KAAX,EAAkBC,QAAlB,KAA+B;AACjD,SAAO,MAAOV,QAAP,IAAoB;AACvB,QAAIW,SAAS,KAAK,EAAd,IAAoBF,KAAK,KAAK,EAA9B,IAAoCG,QAAQ,KAAK,EAArD,EAAwD;AAAE;AACtDC,MAAAA,KAAK,CAAC,6CAAD,CAAL;AACA,aAAO,KAAP;AACH;AAED,WAAOhB,GAAG,CACLU,MADE,CACKI,SADL,EACgBF,KADhB,EACuBG,QADvB,EAEFE,IAFE,CAEIC,IAAD,IAAU;AACZf,MAAAA,QAAQ,CAACN,YAAY,CAACqB,IAAD,CAAb,CAAR;AACAb,MAAAA,YAAY,CAACc,OAAb,CAAqBlB,cAArB,EAAqCmB,IAAI,CAACC,SAAL,CAAeH,IAAf,CAArC;AACAI,MAAAA,OAAO,CAACvB,IAAI,CAAC,GAAD,CAAL,CAAP;AACH,KANE,EAOFwB,KAPE,CAOKC,KAAD,IAAW;AACdR,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAVE,CAAP;AAWH,GAjBD;AAkBH,CAnBM;AAqBP,OAAO,MAAMG,MAAM,GAAG,CAACf,KAAD,EAAQgB,OAAR,KAAoB;AACtC,SAAO,MAAOzB,QAAP,IAAoB;AACvB,QAAIS,KAAK,KAAK,EAAV,IAAgBG,QAAQ,KAAK,EAAjC,EAAqC;AACjCC,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACA,aAAO,KAAP;AACH;;AAED,WAAOhB,GAAG,CACL2B,MADE,CACKf,KADL,EACYG,QADZ,EAEFE,IAFE,CAEIC,IAAD,IAAU;AACZf,MAAAA,QAAQ,CAACP,YAAY,CAACsB,IAAD,CAAb,CAAR;AACAb,MAAAA,YAAY,CAACc,OAAb,CAAqBlB,cAArB,EAAqCmB,IAAI,CAACC,SAAL,CAAeH,IAAf,CAArC;AACAf,MAAAA,QAAQ,CAACJ,IAAI,CAAC,GAAD,CAAL,CAAR;AACH,KANE,EAOFwB,KAPE,CAOKC,KAAD,IAAW;AACdR,MAAAA,KAAK,CAAC,iCAAD,CAAL;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAVE,CAAP;AAWH,GAjBD;AAkBH,CAnBM;AAqBP,OAAO,MAAMK,OAAO,GAAG,MAAM;AACzB,SAAO,MAAO1B,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CAACL,aAAa,EAAd,CAAR;AACAO,IAAAA,YAAY,CAACyB,UAAb,CAAwB7B,cAAxB;AACAE,IAAAA,QAAQ,CAACJ,IAAI,CAAC,SAAD,CAAL,CAAR;AACH,GAJD;AAKH,CANM","sourcesContent":["import API from \"../../API\";\nimport { signInAction, signUpAction, signOutAction } from \"./actions\";\nimport { push } from \"connected-react-router\";\n\nconst api = new API();\nconst LOGIN_USER_KEY = \"LOGIN_USER_KEY\";\n\nexport const fetchFromLocalStoage = () => {\n    return async (dispatch) => {\n        const userJSON = localStorage.getiItem(LOGIN_USER_KEY);\n        if (userJSON && userJSON.token != \"\") {\n            dispatch(signInAction(json.parse(userJSON)));\n        }\n    };\n};\n\nexport const signUp = (username, email, passowrd) => {\n    return async (dispatch) => {\n        if (user_name === \"\" || email === \"\" || password === \"\"); {\n            alert(\"PLease fill out name, aemail, and password.\");\n            return false;\n        }\n\n        return api\n            .signUp(user_name, email, password)\n            .then((user) => {\n                dispatch(signUpAction(user));\n                localStorage.setItem(LOGIN_USER_KEY, JSON.stringify(user));\n                dispath(push(\"/\"));\n            })\n            .catch((error) => {\n                alert(\"Failed to connect API to add a post\");\n                console.log(error);\n            });\n    };\n};\n\nexport const signIn = (email, passord) => {\n    return async (dispatch) => {\n        if (email === \"\" || password === \"\") {\n            alert(\"Please fill out email and password.\");\n            return false;\n        }\n\n        return api\n            .signIn(email, password)\n            .then((user) => {\n                dispatch(signInAction(user));\n                localStorage.setItem(LOGIN_USER_KEY, JSON.stringify(user));\n                dispatch(push(\"/\"));\n            })\n            .catch((error) => {\n                alert(\"Failed to connect API to a post\");\n                console.log(error);\n            })\n    };\n};\n\nexport const signOut = () => {\n    return async (dispatch) => {\n        dispatch(signOutAction());\n        localStorage.removeItem(LOGIN_USER_KEY);\n        dispatch(push(\"/signin\"));\n    };\n};\n\n"]},"metadata":{},"sourceType":"module"}